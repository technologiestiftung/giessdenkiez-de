name: Node.js CI
permissions:
  contents: write
  packages: write
on:
  push:
    branches: [main, staging, feat/ui-rework]
  pull_request:
    branches: [main, staging, feat/ui-rework]

jobs:
  test:
    timeout-minutes: 60
    env:
      CI: true
      ESLINT_USE_FLAT_CONFIG: true
      SUPABASE_URL: http://localhost:54321
      VITE_BASE_URL: http://localhost:5173
      VITE_SUPABASE_URL: http://localhost:54321
      TEST_INBUCKET_URL: http://localhost:54324
      # The values below are taken from the command `supabase start`
      # WARNING: Don't use production URLs or tokens here
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      VITE_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      VITE_MATOMO_SITE_ID: ""
      VITE_MATOMO_URL: ""
      SUPABASE_MAX_ROWS: 10000
      # Set to scheme, domain and possibly port (if something else than port 80) of the origin you are expecting
      # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
      ACCESS_CONTROL_ALLOW_ORIGIN: "*"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      # This is in preparation for release:
      # we clone the staging and master branches of the api
      # and install the supabase CLI
      #
      # - name: Get the source for the api staging
      #   id: checkout-api-staging
      #   uses: actions/checkout@v4
      #   if: github.event.pull_request.base.ref == 'staging' || github.ref == 'refs/heads/staging'
      #   with:
      #     repository: technologiestiftung/giessdenkiez-de-postgres-api
      #     path: api
      #     ref: staging
      # - name: Get the source for the api master
      #  id: checkout-api-master
      #   uses: actions/checkout@v4
      #   if: github.event.pull_request.base.ref == 'master' || github.ref == 'refs/heads/master'
      #   with:
      #     repository: technologiestiftung/giessdenkiez-de-postgres-api
      #     path: api
      # - uses: supabase/setup-cli@v1
      #   with:
      #     version: 1.142.2

      - run: npm ci
      - name: lint
        run: npm run lint
      - name: prettier
        run: npm run prettier:ci
      - name: test
        run: npm run test:unit

      # todo: make e2e tests work in CI
  #      - name: Get the source for the api
  #        id: checkout-api
  #        uses: actions/checkout@v4
  #        with:
  #          repository: technologiestiftung/giessdenkiez-de-postgres-api
  #          ref: "staging"
  #          path: api
  #      - uses: supabase/setup-cli@v1
  #        with:
  #          version: 1.142.2
  #
  #        # Start the supabase
  #      - name: Start supabase
  #        run: |
  #          cd api
  #          npm ci
  #          supabase start
  #          npm run vercel:dev &
  #      - name: Install Playwright Browsers
  #        run: npx playwright install --with-deps
  #      - run: npm run test  --if-present
  #      - uses: actions/upload-artifact@v3
  #        if: always()
  #        with:
  #          name: playwright-report
  #          path: playwright-report/
  #          retention-days: 30
  release:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - run: |
          npm ci
          npx semantic-release --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
